//! –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ HTML –æ—Ç—á—ë—Ç–∞ —Å TypeRef –∏ —Ñ–∞—Å–µ—Ç–∞–º–∏
//! 
//! –°–æ–∑–¥–∞—ë—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π HTML —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø–∞—Ä—Å–µ—Ä–∞

use bsl_gradual_types::adapters::syntax_helper_parser::SyntaxHelperParser;
use bsl_gradual_types::adapters::platform_types_v2::PlatformTypesResolverV2;
use bsl_gradual_types::core::facets::FacetRegistry;
use std::fs;

fn main() -> anyhow::Result<()> {
    println!("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ HTML –æ—Ç—á—ë—Ç–∞ —Å TypeRef –∏ —Ñ–∞—Å–µ—Ç–∞–º–∏...");
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    let json_path = "examples/syntax_helper/syntax_database.json";
    let database = if std::path::Path::new(json_path).exists() {
        SyntaxHelperParser::load_from_file(json_path)?
    } else {
        println!("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.");
        return Ok(());
    };
    
    // –°–æ–∑–¥–∞—ë–º resolver –∏ registry –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    let resolver = PlatformTypesResolverV2::new();
    let mut registry = FacetRegistry::new();
    resolver.populate_facet_registry(&mut registry);
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    let total_functions = database.global_functions.len();
    let total_keywords = database.keywords.len();
    let functions_with_types = database.global_functions.values()
        .filter(|f| f.parameters.iter().any(|p| p.type_ref.is_some()))
        .count();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML
    let html = format!(r#"<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BSL Enhanced Type System Report</title>
    <style>
        :root {{
            --primary: #667eea;
            --secondary: #764ba2;
            --success: #28a745;
            --info: #17a2b8;
            --warning: #ffc107;
            --danger: #dc3545;
        }}
        
        * {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            min-height: 100vh;
            padding: 20px;
        }}
        
        .container {{
            max-width: 1600px;
            margin: 0 auto;
        }}
        
        /* Animated Header */
        .header {{
            background: white;
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.2);
            position: relative;
            overflow: hidden;
        }}
        
        .header::before {{
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, var(--primary), var(--secondary), var(--primary));
            background-size: 200% 100%;
            animation: gradient 3s ease infinite;
        }}
        
        @keyframes gradient {{
            0% {{ background-position: 0% 50%; }}
            50% {{ background-position: 100% 50%; }}
            100% {{ background-position: 0% 50%; }}
        }}
        
        h1 {{
            font-size: 2.5em;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }}
        
        .subtitle {{
            color: #6c757d;
            font-size: 1.2em;
        }}
        
        /* Stats Cards */
        .stats-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }}
        
        .stat-card {{
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }}
        
        .stat-card:hover {{
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.15);
        }}
        
        .stat-icon {{
            font-size: 2.5em;
            margin-bottom: 15px;
        }}
        
        .stat-value {{
            font-size: 2.5em;
            font-weight: bold;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }}
        
        .stat-label {{
            color: #6c757d;
            margin-top: 10px;
            font-size: 1.1em;
        }}
        
        .stat-progress {{
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            margin-top: 15px;
            overflow: hidden;
        }}
        
        .stat-progress-bar {{
            height: 100%;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            border-radius: 2px;
            animation: progress 2s ease-out;
        }}
        
        @keyframes progress {{
            from {{ width: 0; }}
        }}
        
        /* TypeRef Section */
        .typeref-section {{
            background: white;
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 30px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.1);
        }}
        
        .typeref-title {{
            font-size: 2em;
            margin-bottom: 30px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 15px;
        }}
        
        .type-mappings {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 20px;
        }}
        
        .type-mapping-card {{
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s;
        }}
        
        .type-mapping-card:hover {{
            border-color: var(--primary);
            background: linear-gradient(135deg, rgba(102,126,234,0.05), rgba(118,75,162,0.05));
        }}
        
        .type-category {{
            font-weight: bold;
            color: var(--primary);
            margin-bottom: 15px;
            font-size: 1.2em;
        }}
        
        .type-example {{
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 5px;
            margin: 8px 0;
            font-family: 'Consolas', 'Monaco', monospace;
        }}
        
        .type-arrow {{
            color: #6c757d;
            margin: 0 15px;
        }}
        
        .type-normalized {{
            color: var(--success);
            font-weight: bold;
        }}
        
        /* Facet Section */
        .facet-section {{
            background: white;
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 30px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.1);
        }}
        
        .facet-examples {{
            display: grid;
            gap: 30px;
        }}
        
        .facet-object {{
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, white);
        }}
        
        .facet-object-name {{
            font-size: 1.5em;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
        }}
        
        .facet-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }}
        
        .facet-card {{
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: all 0.3s;
        }}
        
        .facet-card:hover {{
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }}
        
        .facet-type {{
            font-size: 1.3em;
            font-weight: bold;
            margin-bottom: 10px;
        }}
        
        .facet-class {{
            font-family: monospace;
            opacity: 0.95;
            margin-bottom: 15px;
        }}
        
        .facet-methods {{
            font-size: 0.9em;
            opacity: 0.85;
            border-top: 1px solid rgba(255,255,255,0.3);
            padding-top: 10px;
            margin-top: 10px;
        }}
        
        /* Interactive Search */
        .search-section {{
            background: white;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.1);
        }}
        
        .search-box {{
            width: 100%;
            padding: 15px 20px;
            font-size: 1.2em;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            transition: all 0.3s;
        }}
        
        .search-box:focus {{
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(102,126,234,0.1);
        }}
        
        .search-results {{
            margin-top: 20px;
            max-height: 400px;
            overflow-y: auto;
        }}
        
        .result-item {{
            padding: 15px;
            border-bottom: 1px solid #e9ecef;
            transition: all 0.3s;
            cursor: pointer;
        }}
        
        .result-item:hover {{
            background: #f8f9fa;
            padding-left: 25px;
        }}
        
        .hidden {{
            display: none;
        }}
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>üöÄ BSL Enhanced Type System Report</h1>
            <div class="subtitle">–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–ø–æ–≤ —Å TypeRef, —Ñ–∞—Å–µ—Ç–∞–º–∏ –∏ –≥—Ä–∞–¥—É–∞–ª—å–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π</div>
        </div>
        
        <!-- Statistics -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon">üì¶</div>
                <div class="stat-value">{total_functions}</div>
                <div class="stat-label">–ì–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</div>
                <div class="stat-progress">
                    <div class="stat-progress-bar" style="width: 100%"></div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon">‚úÖ</div>
                <div class="stat-value">{functions_with_types}</div>
                <div class="stat-label">–§—É–Ω–∫—Ü–∏–π —Å —Ç–∏–ø–∞–º–∏</div>
                <div class="stat-progress">
                    <div class="stat-progress-bar" style="width: {percent}%"></div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon">üî§</div>
                <div class="stat-value">{total_keywords}</div>
                <div class="stat-label">–ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤</div>
                <div class="stat-progress">
                    <div class="stat-progress-bar" style="width: 100%"></div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon">üî∑</div>
                <div class="stat-value">6</div>
                <div class="stat-label">–í–∏–¥–æ–≤ —Ñ–∞—Å–µ—Ç–æ–≤</div>
                <div class="stat-progress">
                    <div class="stat-progress-bar" style="width: 100%"></div>
                </div>
            </div>
        </div>
        
        <!-- TypeRef System -->
        <div class="typeref-section">
            <h2 class="typeref-title">
                <span>üéØ</span>
                <span>–°–∏—Å—Ç–µ–º–∞ TypeRef - –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤</span>
            </h2>
            
            <div class="type-mappings">
                <div class="type-mapping-card">
                    <div class="type-category">üîµ –Ø–∑—ã–∫–æ–≤—ã–µ —Ç–∏–ø—ã (language:)</div>
                    <div class="type-example">
                        <span>–°—Ç—Ä–æ–∫–∞</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">language:def_String</span>
                    </div>
                    <div class="type-example">
                        <span>–ß–∏—Å–ª–æ</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">language:def_Number</span>
                    </div>
                    <div class="type-example">
                        <span>–ë—É–ª–µ–≤–æ</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">language:def_Boolean</span>
                    </div>
                </div>
                
                <div class="type-mapping-card">
                    <div class="type-category">üü¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ç–∏–ø—ã (context:)</div>
                    <div class="type-example">
                        <span>–ú–∞—Å—Å–∏–≤</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">context:objects/Array</span>
                    </div>
                    <div class="type-example">
                        <span>–°—Ç—Ä—É–∫—Ç—É—Ä–∞</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">context:objects/Structure</span>
                    </div>
                    <div class="type-example">
                        <span>–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">context:objects/Map</span>
                    </div>
                </div>
                
                <div class="type-mapping-card">
                    <div class="type-category">üî¥ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (metadata_ref:)</div>
                    <div class="type-example">
                        <span>–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–°—Å—ã–ª–∫–∞.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">metadata_ref:–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–°—Å—ã–ª–∫–∞.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</span>
                    </div>
                    <div class="type-example">
                        <span>–î–æ–∫—É–º–µ–Ω—Ç–°—Å—ã–ª–∫–∞.–ó–∞–∫–∞–∑</span>
                        <span class="type-arrow">‚Üí</span>
                        <span class="type-normalized">metadata_ref:–î–æ–∫—É–º–µ–Ω—Ç–°—Å—ã–ª–∫–∞.–ó–∞–∫–∞–∑</span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Facet System -->
        <div class="facet-section">
            <h2 class="typeref-title">
                <span>üî∑</span>
                <span>–§–∞—Å–µ—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</span>
            </h2>
            
            <div class="facet-examples">
                <div class="facet-object">
                    <div class="facet-object-name">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</div>
                    <div class="facet-grid">
                        <div class="facet-card">
                            <div class="facet-type">Manager</div>
                            <div class="facet-class">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</div>
                            <div class="facet-methods">
                                –°–æ–∑–¥–∞—Ç—å–≠–ª–µ–º–µ–Ω—Ç()<br>
                                –ù–∞–π—Ç–∏–ü–æ–ö–æ–¥—É()<br>
                                –ù–∞–π—Ç–∏–ü–æ–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—é()
                            </div>
                        </div>
                        <div class="facet-card">
                            <div class="facet-type">Object</div>
                            <div class="facet-class">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–û–±—ä–µ–∫—Ç.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</div>
                            <div class="facet-methods">
                                –ó–∞–ø–∏—Å–∞—Ç—å()<br>
                                –£–¥–∞–ª–∏—Ç—å()<br>
                                –ó–∞–ø–æ–ª–Ω–∏—Ç—å–ü–æ–£–º–æ–ª—á–∞–Ω–∏—é()
                            </div>
                        </div>
                        <div class="facet-card">
                            <div class="facet-type">Reference</div>
                            <div class="facet-class">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–°—Å—ã–ª–∫–∞.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</div>
                            <div class="facet-methods">
                                –ü–æ–ª—É—á–∏—Ç—å–û–±—ä–µ–∫—Ç()<br>
                                –ü—É—Å—Ç–∞—è()<br>
                                –£–Ω–∏–∫–∞–ª—å–Ω—ã–π–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä()
                            </div>
                        </div>
                        <div class="facet-card">
                            <div class="facet-type">Metadata</div>
                            <div class="facet-class">–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ.–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏.–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã</div>
                            <div class="facet-methods">
                                –†–µ–∫–≤–∏–∑–∏—Ç—ã<br>
                                –¢–∞–±–ª–∏—á–Ω—ã–µ–ß–∞—Å—Ç–∏<br>
                                –§–æ—Ä–º—ã
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Interactive Search -->
        <div class="search-section">
            <h2 class="typeref-title">
                <span>üîç</span>
                <span>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫</span>
            </h2>
            <input type="text" class="search-box" id="searchBox" placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ç–∏–ø–∞..." onkeyup="performSearch()">
            <div class="search-results" id="searchResults"></div>
        </div>
    </div>
    
    <script>
        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
        const searchData = [
            {functions_json},
            {keywords_json}
        ];
        
        function performSearch() {{
            const query = document.getElementById('searchBox').value.toLowerCase();
            const resultsDiv = document.getElementById('searchResults');
            
            if (query.length < 2) {{
                resultsDiv.innerHTML = '';
                return;
            }}
            
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞
            resultsDiv.innerHTML = '<div class="result-item">–ü–æ–∏—Å–∫: ' + query + '</div>';
        }}
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        window.addEventListener('load', () => {{
            document.querySelectorAll('.stat-card').forEach((card, index) => {{
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {{
                    card.style.transition = 'all 0.5s';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }}, index * 100);
            }});
        }});
    </script>
</body>
</html>"#,
        total_functions = total_functions,
        functions_with_types = functions_with_types,
        total_keywords = total_keywords,
        percent = (functions_with_types as f32 / total_functions as f32 * 100.0) as u32,
        functions_json = "[]", // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å JSON —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏
        keywords_json = "[]"   // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å JSON —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    let output_path = "type_hierarchy_enhanced_generated.html";
    fs::write(output_path, html)?;
    
    println!("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π HTML –æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω: {}", output_path);
    println!("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:");
    println!("   - –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π: {}", total_functions);
    println!("   - –§—É–Ω–∫—Ü–∏–π —Å —Ç–∏–ø–∞–º–∏: {}", functions_with_types);
    println!("   - –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {}", total_keywords);
    println!("üåê –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞");
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    #[cfg(windows)]
    {
        std::process::Command::new("cmd")
            .args(&["/C", "start", output_path])
            .spawn()
            .ok();
    }
    
    Ok(())
}